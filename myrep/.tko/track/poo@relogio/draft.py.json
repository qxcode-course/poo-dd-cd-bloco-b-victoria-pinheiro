{
    "patches": [
        {
            "label": "2025-10-12_23-32-17",
            "content": "@@ -1,2553 +0,0 @@\n-class Watch:%0A    def __init__(self,hour: int = 0,minute: int = 0,seconds: int = 0):%0A        self.__hour = 0%0A        self.__minute = 0%0A        self.__seconds = 0%0A%0A        self.setHour(hour)%0A        self.setMinute(minute)%0A        self.setSeconds(seconds)%0A%0A    def __str__(self) -%3E str:%0A        hour = self.getHour()%0A        minute = self.getMinute()%0A        seconds = self.getSeconds()%0A        return f%22%7Bhour:02%7D:%7Bminute:02%7D:%7Bseconds:02%7D%22%0A    %0A    def getHour(self) -%3E int:%0A        return self.__hour%0A    %0A    def getMinute(self) -%3E int:%0A        return self.__minute%0A%0A    def getSeconds(self) -%3E int:%0A        return self.__seconds%0A    %0A    def setHour(self, value: int):%0A        if value %3C 0 or value %3E 59:%0A            print(%22fail: hora invalida%22)%0A            return%0A        %0A        self.__hour = value%0A%0A    def setMinute(self, value: int):%0A        if value %3C 0 or value %3E 59:%0A            print(%22fail: segundo invalido%22)%0A            return%0A        %0A        self.__minute = value%0A%0A    def setSeconds(self, value: int):%0A        if value %3C 0 or value %3E 59:%0A            print(%22fail: segundo invalido%22)%0A            return%0A        %0A        self.__seconds = value%0A%0A        def nextSecond(self):%0A            if self.getSeconds() != 59:%0A                self.setSeconds(self.getSeconds() + 1)%0A%0A            else:%0A                self.setSeconds(0)%0A                if self.getMinute() != 59:%0A                    self.getMinute(self.getMinute() + 1)%0A%0A                else:%0A                    self.setMinute(0)%0A                    if self.getHour() != 23:%0A                        self.setHour(self.getHour() + 1)%0A                    else:%0A                        self.setHour(0)%0A                        self.setMinute(0)%0A                        self.setSeconds(0)%0A                    %0A        return%0A%0A    def main():%0A        watch = Watch()%0A%0A        while True:%0A            line = input()%0A            args = line.split(%22%22)%0A            print(f%22$%7Bline%7D%22)%0A%0A            match args%5B0%5D:%0A                case %22show%22:%0A                    print(watch)%0A%0A                case %22init%22:%0A                    watch = Watch(int(args%5B1%5D), int(args%5B2%5D), int(args%5B3%5D))  %0A%0A                case %22set%22:%0A                    watch.setHour(int(args%5B1%5D))%0A                    watch.setMinute(int(args%5B2%5D))%0A                    watch.setSeconds(int(args%5B3%5D))%0A%0A                case %22next%22:%0A                    watch.nextSecond()%0A    %0A                case %22end%22:%0A                    break%0A%0A                case _:%0A                    print(%22fail: comando invalido%22)%0A%0A    main()%0A %0A%0A                %0A%0A\n",
            "lines": "0"
        },
        {
            "label": "2025-10-13_00-10-04",
            "content": "@@ -972,17 +972,16 @@\n  value%0A%0A\n-%0A\n     def \n@@ -1101,32 +1101,41 @@\n          return%0A\n+        %0A\n         self.__s\n@@ -1142,32 +1142,36 @@\n econds = value%0A%0A\n+    \n     def nextSeco\n@@ -1180,16 +1180,20 @@\n (self):%0A\n+    \n         \n@@ -1212,32 +1212,36 @@\n econds() != 59:%0A\n+    \n             self\n@@ -1267,32 +1267,37 @@\n tSeconds() + 1)%0A\n+%0A    \n         else:%0A  \n@@ -1286,32 +1286,36 @@\n           else:%0A\n+    \n             self\n@@ -1333,32 +1333,36 @@\n (0)%0A            \n+  \n+  \n if self.getMinut\n@@ -1364,32 +1364,36 @@\n Minute() != 59:%0A\n+    \n                 \n@@ -1389,33 +1389,33 @@\n            self.\n-s\n+g\n etMinute(self.ge\n@@ -1421,32 +1421,35 @@\n etMinute() + 1)%0A\n+%0A  \n             else\n@@ -1436,38 +1436,44 @@\n %0A%0A              \n+  \n else:%0A\n+    \n                 \n@@ -1498,32 +1498,36 @@\n                 \n+    \n if self.getHour(\n@@ -1547,32 +1547,36 @@\n                 \n+ \n+   \n self.setHour(sel\n@@ -1600,38 +1600,46 @@\n                 \n+    \n else:%0A\n+    \n                 \n@@ -1657,16 +1657,137 @@\n tHour(0)\n+%0A                        self.setMinute(0)%0A                        self.setSeconds(0)%0A                    %0A        return\n %0A%0A    de\n@@ -1825,35 +1825,8 @@\n ()%0A%0A\n-%0A%0A        watch = Watch()%0A%0A\n     \n@@ -1898,16 +1898,18 @@\n e.split(\n+%22%22\n )%0A      \n@@ -1937,64 +1937,8 @@\n %22)%0A%0A\n-            if len(args) == 0:%0A                continue%0A\n     \n@@ -2022,16 +2022,17 @@\n (watch)%0A\n+%0A\n         \n@@ -2130,16 +2130,17 @@\n %5B3%5D))  %0A\n+%0A\n         \n@@ -2304,24 +2304,25 @@\n t(args%5B3%5D))%0A\n+%0A\n             \n@@ -2377,16 +2377,21 @@\n econd()%0A\n+    %0A\n         \n@@ -2436,16 +2436,17 @@\n   break%0A\n+%0A\n         \n@@ -2522,24 +2522,26 @@\n     main()%0A \n+%0A%0A\n             \n@@ -2530,21 +2530,24 @@\n ()%0A %0A%0A              \n+  %0A\n %0A\n",
            "lines": "100"
        },
        {
            "label": "2025-10-13_00-12-52",
            "content": "@@ -28,17 +28,16 @@\n __(self,\n- \n hour: in\n@@ -42,17 +42,16 @@\n int = 0,\n- \n minute: \n@@ -58,17 +58,16 @@\n int = 0,\n- \n seconds:\n@@ -150,24 +150,25 @@\n seconds = 0%0A\n+%0A\n         self\n@@ -430,16 +430,20 @@\n ds:02%7D%22%0A\n+    \n %0A    def\n@@ -492,16 +492,20 @@\n .__hour%0A\n+    \n %0A    def\n@@ -622,16 +622,20 @@\n seconds%0A\n+    \n %0A    def\n@@ -694,18 +694,18 @@\n value %3E \n-23\n+59\n :%0A      \n@@ -750,32 +750,41 @@\n          return%0A\n+        %0A\n         self.__h\n@@ -894,21 +894,22 @@\n (%22fail: \n-minut\n+segund\n o invali\n@@ -924,32 +924,41 @@\n          return%0A\n+        %0A\n         self.__m\n@@ -964,32 +964,33 @@\n minute = value%0A%0A\n+%0A\n     def setSecon\n@@ -1597,16 +1597,20 @@\n our(0)%0A%0A\n+    \n def main\n@@ -1613,24 +1613,28 @@\n main():%0A    \n+ \n+   \n watch = Watc\n@@ -1637,16 +1637,48 @@\n Watch()%0A\n+%0A%0A%0A        watch = Watch()%0A%0A    \n     whil\n@@ -1685,16 +1685,20 @@\n e True:%0A\n+    \n         \n@@ -1720,16 +1720,20 @@\n         \n+    \n args = l\n@@ -1748,24 +1748,28 @@\n t()%0A        \n+    \n print(f%22$%7Bli\n@@ -1774,24 +1774,25 @@\n line%7D%22)%0A\n+%0A\n         \n if len(a\n@@ -1783,16 +1783,20 @@\n         \n+    \n if len(a\n@@ -1818,16 +1818,20 @@\n         \n+    \n continue\n@@ -1839,29 +1839,55 @@\n         \n+ \n-if args%5B0%5D ==\n+   match args%5B0%5D:%0A                case\n  %22show%22:\n@@ -1887,16 +1887,24 @@\n %22show%22:%0A\n+        \n         \n@@ -1928,31 +1928,28 @@\n         \n+  \n-elif args%5B0%5D ==\n+      case\n  %22init%22:\n@@ -1945,24 +1945,32 @@\n ase %22init%22:%0A\n+        \n             \n@@ -2016,32 +2016,34 @@\n ), int(args%5B3%5D))\n+  \n %0A        elif ar\n@@ -2035,31 +2035,28 @@\n         \n-elif args%5B0%5D ==\n+        case\n  %22set%22:%0A\n@@ -2059,32 +2059,40 @@\n t%22:%0A            \n+  \n+      \n watch.setHour(in\n@@ -2107,32 +2107,40 @@\n %5D))%0A            \n+   \n+     \n watch.setMinute(\n@@ -2157,32 +2157,40 @@\n %5D))%0A            \n+   \n+     \n watch.setSeconds\n@@ -2212,31 +2212,28 @@\n         \n-elif args%5B0%5D ==\n+        case\n  %22next%22:\n@@ -2229,24 +2229,32 @@\n ase %22next%22:%0A\n+        \n             \n@@ -2284,23 +2284,20 @@\n     \n+ \n-elif args%5B0%5D ==\n+       case\n  %22en\n@@ -2312,16 +2312,24 @@\n         \n+       \n+ \n break%0A  \n@@ -2326,38 +2326,56 @@\n   break%0A        \n+       \n-else:%0A\n+ case _:%0A        \n             prin\n@@ -2407,12 +2407,31 @@\n %22)%0A%0A\n+    \n main()%0A\n+               \n %0A\n",
            "lines": "92"
        },
        {
            "label": "2025-10-13_00-14-13",
            "content": "class Watch:\n    def __init__(self, hour: int = 0, minute: int = 0, seconds: int = 0):\n        self.__hour = 0\n        self.__minute = 0\n        self.__seconds = 0\n        self.setHour(hour)\n        self.setMinute(minute)\n        self.setSeconds(seconds)\n\n    def __str__(self) -> str:\n        hour = self.getHour()\n        minute = self.getMinute()\n        seconds = self.getSeconds()\n        return f\"{hour:02}:{minute:02}:{seconds:02}\"\n\n    def getHour(self) -> int:\n        return self.__hour\n\n    def getMinute(self) -> int:\n        return self.__minute\n\n    def getSeconds(self) -> int:\n        return self.__seconds\n\n    def setHour(self, value: int):\n        if value < 0 or value > 23:\n            print(\"fail: hora invalida\")\n            return\n        self.__hour = value\n\n    def setMinute(self, value: int):\n        if value < 0 or value > 59:\n            print(\"fail: minuto invalido\")\n            return\n        self.__minute = value\n\n    def setSeconds(self, value: int):\n        if value < 0 or value > 59:\n            print(\"fail: segundo invalido\")\n            return\n        self.__seconds = value\n\n    def nextSecond(self):\n        if self.getSeconds() != 59:\n            self.setSeconds(self.getSeconds() + 1)\n        else:\n            self.setSeconds(0)\n            if self.getMinute() != 59:\n                self.setMinute(self.getMinute() + 1)\n            else:\n                self.setMinute(0)\n                if self.getHour() != 23:\n                    self.setHour(self.getHour() + 1)\n                else:\n                    self.setHour(0)\n\ndef main():\n    watch = Watch()\n    while True:\n        line = input()\n        args = line.split()\n        print(f\"${line}\")\n        if len(args) == 0:\n            continue\n        if args[0] == \"show\":\n            print(watch)\n        elif args[0] == \"init\":\n            watch = Watch(int(args[1]), int(args[2]), int(args[3]))\n        elif args[0] == \"set\":\n            watch.setHour(int(args[1]))\n            watch.setMinute(int(args[2]))\n            watch.setSeconds(int(args[3]))\n        elif args[0] == \"next\":\n            watch.nextSecond()\n        elif args[0] == \"end\":\n            break\n        else:\n            print(\"fail: comando invalido\")\n\nmain()\n\n",
            "lines": "81"
        }
    ]
}